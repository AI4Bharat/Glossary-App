{"version":3,"file":"static/js/242.8852d5ed.chunk.js","mappings":"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","sources":["ui/styles/header.js","ui/pages/component/common/Header.jsx"],"sourcesContent":["import { makeStyles } from '@mui/styles';\nimport { padding } from '@mui/system';\n\nconst headerStyle = makeStyles({\n    parentContainer: {\n        // flexGrow : 1,\n        marginBottom : window.innerHeight*0.13,\n        width : window.innerWidth*0.98,\n      \n      \n       \n    },\n    appBar: {\n        // backgroundColor: \"#ffffff\", \n        // position: 'inherit',\n        // marginBotto m : '5%'\n    },\n    toolbar: {\n        justifyContent : \"space-between\",\n        maxWidth: \"1272px\",\n        width: \"100%\",\n        margin: \"0 auto\",\n        display: \"flex\",\n        alignItems: \"center\",\n        // padding: \"inherit !important\",\n        padding:\"0px !important\",\n        boxSizing: \"border-box\",\n        minHeight: \"54px\",\n        fontFamily: '\"Roboto\" ,sans-serif',\n      \n    },\n    menu:{\n        maxWidth: \"1272px\",\n        width: \"100%\",\n        margin: \"0 auto\",\n        display: \"flex\",\n        alignItems: \"center\",\n        cursor: \"pointer\",\n     \n\n    },\n    headerLogo: {\n        height: \"2rem\", \n        width: \"10rem\", \n    },\n    headerMenu : {\n        textDecoration : \"none\",\n        borderRadius: \"inherit\",\n        backgroundColor: \"transparent\",\n        padding : \"18px \",\n        color: \"black\",\n        boxShadow: \"none\",\n        fontSize: \"19px\",\n        fontFamily: \"Roboto\", \n        fontWeight: 500,\n        letterSpacing: \"0.5px\",\n        borderRadius:12,\n        marginLeft: 5,\n        marginRight: 5,\n        '&:hover': {\n            backgroundColor: \"#E0E0E0\",\n            boxShadow: \"none\",\n            \n        },\n    },\n    highlightedMenu : {\n        backgroundColor: \"#E0E0E0\",\n        textDecoration : \"none\",\n        borderRadius: \"inherit\",\n        padding : \"18px \",\n        color: \"black\",\n        boxShadow: \"none\",\n        fontSize: \"19px\",\n        fontFamily: \"Roboto\", \n        fontWeight: 500,\n        borderRadius:12,\n        marginLeft: 5,\n        marginRight: 5,\n        letterSpacing: \"0.5px\",\n        '&:hover': {\n            backgroundColor: \"#E0E0E0\",\n            boxShadow: \"none\",\n        },\n    },\n    avatar: {\n        width: \"36px\",\n        height: \"36px\",\n        backgroundColor: \"#2A61AD !important\",\n        fontSize: \"14px\",\n        color: \"#FFFFFF !important\",\n        \"@media (max-width:640px)\": {\n          width: \"26px\",\n          height: \"26px\",\n        },\n      },\n})\n\nexport default headerStyle","import * as React from 'react';\nimport { useNavigate, useLocation, NavLink } from \"react-router-dom\";\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport AdbIcon from '@mui/icons-material/Adb';\nimport PersonIcon from '@mui/icons-material/Person';\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\nimport headerStyle from \"../../../styles/header\";\nimport { useSelector } from 'react-redux';\nimport { translate } from \"../../../../config/localisation\";\nimport CustomButton from './Button';\nimport { Divider, Drawer, Grid, Icon } from '@mui/material';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\n\n\nconst Header = (props) => {\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    const classes = headerStyle();\n\n    const { publicHeader, screenTitle } = props;\n\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n    const [anchorElHelp, setAnchorElHelp] = React.useState(null);\n\n    const userData = useSelector((state) => state.userLoginDetails.data);\n\n    React.useEffect(() => {\n        console.log(\"userData --- \", userData);\n    }, [userData])\n\n    const getActiveRoute = (id) => {\n        return location.pathname === id\n    }\n\n    const pages = publicHeader ? [\n        {\n            name: \"View Glossary\",\n            onClick: () => onHeaderMenuClick(\"/\"),\n            id: \"/\",\n            isActive: () => getActiveRoute(\"/\")\n        },\n        {\n            name: \"Analytics\",\n            onClick: () => onHeaderMenuClick(\"/public-analytics\"),\n            id: \"/public-analytics\",\n            isActive: () => getActiveRoute(\"/public-analytics\")\n        }\n    ] : [\n        {\n            name: \"View Glossary\",\n            onClick: () => onHeaderMenuClick(\"/view-glossary\"),\n            id: \"/view-glossary\",\n            isActive: () => getActiveRoute(\"/view-glossary\")\n        },\n        {\n            name: \"Add Glossary\",\n            onClick: () => onHeaderMenuClick(\"/add-glossary\"),\n            id: \"/add-glossary\",\n            isActive: () => getActiveRoute(\"/add-glossary\")\n        },\n        {\n            name: \"Analytics\",\n            onClick: () => onHeaderMenuClick(\"/analytics\"),\n            id: \"/analytics\",\n            isActive: () => getActiveRoute(\"/analytics\")\n        }\n    ];\n\n    const helpMenuArr = [\n        {\n            id: \"Codebase\",\n            name: \"Codebase\",\n            onclick: () => window.open(\"https://github.com/AI4Bharat/Indic-Glossary-Explorer\")\n        },\n        {\n            id: \"Tutorial\",\n            name: \"Tutorial\",\n            onclick: () => window.open(\"https://github.com/AI4Bharat/Indic-Glossary-Explorer/wiki\")\n        },\n        {\n            id: \"Introduction Video\",\n            name: \"Introduction Video\",\n            onclick: () => window.open(\"https://www.youtube.com/watch?v=MPtezE6KDvk\")\n        },\n        {\n            id: \"API Specs\",\n            name: \"API Specs\",\n            onclick: () => window.open(\"https://app.swaggerhub.com/apis/ai4bharat-iitm/indic-glossary-explorer/1.0.0\")\n        },\n    ]\n\n    const onHeaderMenuClick = (id) => {\n        handleCloseNavMenu();\n        navigate(id);\n    }\n\n    const onLogoutClick = () => {\n        localStorage.clear();\n        handleCloseUserMenu();\n        navigate(\"/user/login\");\n    }\n\n    const handleOpenHelpMenu = (event) => {\n        setAnchorElHelp(event.currentTarget);\n    }\n\n    const handleCloseHelpMenu = () => {\n        setAnchorElHelp(null);\n    };\n\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget);\n    };\n    const handleOpenUserMenu = (event) => {\n        setAnchorElUser(event.currentTarget);\n    };\n\n    const handleCloseNavMenu = () => {\n        setAnchorElNav(null);\n    };\n\n    const handleCloseUserMenu = () => {\n        setAnchorElUser(null);\n    };\n\n    const onHelpMenuClick = (callback) => {\n        callback();\n        handleCloseHelpMenu();\n    }\n\n    const renderHelpButton = () => {\n        return (\n            <>\n                <CustomButton\n                    label={\"Help\"}\n                    onClick={handleOpenHelpMenu}\n                    sx={{ borderRadius: 2, padding: 3, fontSize: '1rem', marginRight: 2 }}\n                    size=\"large\"\n                    aria-controls={anchorElHelp ? 'account-menu' : undefined}\n                    aria-haspopup=\"true\"\n                    aria-expanded={anchorElHelp ? 'true' : undefined}\n                />\n                <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorElHelp}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={Boolean(anchorElHelp)}\n                    onClose={handleCloseHelpMenu}\n                    sx={{\n                        // display: { xs: 'block', md: 'block' },\n                    }}\n                >\n                    <Grid\n                        sx={{ padding: 0.5 }}\n                    >\n                        {\n                            helpMenuArr.map((menu, index) => {\n                                return (\n                                    <IconButton key={menu.id} onClick={() => onHelpMenuClick(menu.onclick)} sx={{ p: 1, width: '100%', justifyContent: 'start' }}>\n                                        {/* <ExitToAppIcon /> */}\n                                        <Typography variant='button' sx={{ marginLeft: 1 }}>{menu.name}</Typography>\n                                    </IconButton>\n                                )\n                            })\n                        }\n                    </Grid>\n                </Menu>\n            </>\n        )\n    }\n\n    const renderAuthLinkButton = () => {\n        console.log(\"publicHeader --- \", publicHeader);\n        if (!publicHeader) {\n            // return <Tooltip title=\"Log out\">\n            //     <IconButton onClick={onLogoutClick} sx={{ p: 0 }}>\n            //         <ExitToAppIcon />\n            //     </IconButton>\n            // </Tooltip>\n            return (\n                <>\n                    <IconButton\n                        onClick={handleOpenUserMenu}\n                        size=\"large\"\n                        sx={{ borderRadius: 2, padding: 1 }}\n                        aria-controls={anchorElUser ? 'account-menu' : undefined}\n                        aria-haspopup=\"true\"\n                        aria-expanded={anchorElUser ? 'true' : undefined}\n                    >\n                        <Avatar sx={{}}>{JSON.parse(localStorage.getItem(\"userDetails\"))?.username?.split(\"\")[0]}</Avatar>\n                        <Typography variant='body1' sx={{ display: { md: \"inline\", xs: \"none\" }, marginLeft: 1, marginRight: 1, color: \"rgb(39, 30, 79)\" }}>\n                            {JSON.parse(localStorage.getItem(\"userDetails\"))?.user?.split(\" \")[0]}\n                        </Typography>\n                        <KeyboardArrowDownIcon />\n                    </IconButton>\n                    <Menu\n                        id=\"menu-appbar\"\n                        anchorEl={anchorElUser}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                        }}\n                        keepMounted\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                        }}\n                        open={Boolean(anchorElUser)}\n                        onClose={handleCloseUserMenu}\n                        sx={{\n                            // display: { xs: 'block', md: 'block' },\n                        }}\n                    >\n                        <Grid\n                            sx={{ padding: 0.5 }}\n                        >\n                            <IconButton onClick={onLogoutClick} sx={{ p: 1, width: '100%', justifyContent: 'start' }}>\n                                {/* <ExitToAppIcon /> */}\n                                <Typography variant='button' sx={{ marginLeft: 1 }}>Logout</Typography>\n                            </IconButton>\n                        </Grid>\n                    </Menu>\n                </>\n            )\n        } else {\n            return <CustomButton\n                label={\"Login\"}\n                onClick={() => navigate('/user/login')}\n                sx={{ borderRadius: 2, padding: 3, fontSize: '1rem' }}\n                size=\"large\"\n            />\n        }\n    }\n\n    const MobileHeader = (props) => {\n        return (\n            <>\n                <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' }, justifyContent: \"space-between\" }} alignItems={\"center\"}>\n                    <img\n                        src={\"transparent-glossary-explorer-logo.png\"}\n                        width={\"50rem\"}\n                        height={\"50rem\"}\n                    />\n                    <Typography variant=\"inherit\" sx={{color: \"#000000\"}}>{screenTitle}</Typography>\n                    <IconButton\n                        size=\"large\"\n                        aria-label=\"account of current user\"\n                        aria-controls=\"menu-appbar\"\n                        aria-haspopup=\"true\"\n                        onClick={handleOpenNavMenu}\n                        sx={{\n                            color: \"#000000\"\n                        }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Drawer\n                        anchor={\"right\"}\n                        open={Boolean(anchorElNav)}\n                        onClose={handleCloseNavMenu}\n                    >\n                        <Grid\n                            container\n                            direction={\"row\"}\n                            alignItems={\"start\"}\n                            sx={{ padding: 2 }}\n                            height={\"100%\"}\n                            overflow={\"auto\"}\n                        >\n                            <Grid\n                                container\n                                alignItems={\"center\"}\n                                direction={\"row\"}\n                                justifyContent={\"space-between\"}\n                                marginBottom={2}\n                            >\n                                <Grid>\n                                    <IconButton onClick={handleCloseNavMenu}>\n                                        <ChevronLeftIcon fontSize='large' />{!publicHeader ? <Typography variant='h5'>\n                                        {JSON.parse(localStorage.getItem(\"userDetails\"))?.user?.split(\" \")[0]}\n                                    </Typography>\n                                        : null\n                                    }\n                                    </IconButton>\n                                </Grid>\n                                <img\n                                    src={\"transparent-glossary-explorer-logo.png\"}\n                                    width={\"50rem\"}\n                                    height={\"50rem\"}\n                                />\n                            </Grid>\n\n                            <Divider sx={{ width: \"100%\" }} />\n                            {pages?.map((page) => (\n                                <MenuItem key={page.name} onClick={() => page.onClick()} sx={{ p: 1, width: '100%', justifyContent: 'start', marginLeft: 2 }}>\n                                    <Typography variant='button'>{page.name}</Typography>\n                                </MenuItem>\n                            ))}\n                            <Divider sx={{ width: \"100%\" }} />\n                            {helpMenuArr.map((menu, index) => {\n                                return (\n                                    <MenuItem key={menu.id} onClick={() => onHelpMenuClick(menu.onclick)} sx={{ p: 1, width: '100%', justifyContent: 'start', marginLeft: 2 }}>\n                                        <Typography variant='button'>{menu.name}</Typography>\n                                    </MenuItem>\n                                )\n                            })}\n                            <Divider sx={{ width: \"100%\" }} />\n                            {!publicHeader ?\n                                <MenuItem onClick={onLogoutClick} sx={{ p: 1, width: '100%', justifyContent: 'start', marginLeft: 2 }}>\n                                    <Typography variant='button'>Logout</Typography>\n                                </MenuItem> : <MenuItem onClick={() => navigate('/user/login')} sx={{ p: 1, width: '100%', justifyContent: 'start', marginLeft: 2 }}>\n                                    <Typography variant='button'>Login</Typography>\n                                </MenuItem>}\n                        </Grid>\n                    </Drawer>\n                </Box>\n            </>\n        )\n    }\n\n    return (\n        <AppBar position=\"fixed\"\n            sx={{\n                backgroundImage: \"linear-gradient(to right, rgb(241, 241, 241), rgb(255, 255, 255))\",\n            }}\n        >\n            <Container maxWidth=\"xl\">\n                <Toolbar className={classes.toolbar}>\n                    <Box\n                        sx={{\n                            display: { xs: 'none', md: 'flex' },\n                            alignItems: 'center'\n                        }}\n                    >\n                        <img\n                            src={\"transparent-glossary-explorer-logo.png\"}\n                            width={\"70rem\"}\n                            height={\"70rem\"}\n                        />\n                    </Box>\n                    {MobileHeader()}\n                    <Box sx={{ flexGrow: 1, placeContent: \"center\", display: { xs: 'none', md: 'flex' } }}>\n                        {pages?.map((page) => (\n\n                            <NavLink\n                                end\n                                hidden={page.hidden}\n                                key={page.name}\n                                to={page.id}\n                                className={({ isActive }) =>\n                                    isActive ? classes.highlightedMenu : classes.headerMenu\n                                }\n                                activeClassName={classes.highlightedMenu}\n                            >\n                                {page.name}\n                            </NavLink>\n                        ))}\n                    </Box>\n\n                    <Box sx={{ flexGrow: 0, display: { xs: 'none', md: 'flex' } }}>\n                        {renderHelpButton()}\n                        {renderAuthLinkButton()}\n                    </Box>\n                </Toolbar>\n            </Container>\n        </AppBar>\n    );\n};\nexport default Header;\n"],"names":["makeStyles","parentContainer","marginBottom","window","innerHeight","width","innerWidth","appBar","toolbar","justifyContent","maxWidth","margin","display","alignItems","padding","boxSizing","minHeight","fontFamily","menu","cursor","headerLogo","height","headerMenu","textDecoration","borderRadius","backgroundColor","color","boxShadow","fontSize","fontWeight","letterSpacing","highlightedMenu","avatar","props","navigate","useNavigate","location","useLocation","classes","headerStyle","publicHeader","screenTitle","React","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","anchorElHelp","setAnchorElHelp","userData","useSelector","state","userLoginDetails","data","console","log","getActiveRoute","id","pathname","pages","name","onClick","onHeaderMenuClick","isActive","helpMenuArr","onclick","open","handleCloseNavMenu","onLogoutClick","localStorage","clear","handleCloseUserMenu","handleOpenHelpMenu","event","currentTarget","handleCloseHelpMenu","handleOpenNavMenu","handleOpenUserMenu","onHelpMenuClick","callback","AppBar","position","sx","backgroundImage","Container","Toolbar","className","Box","xs","md","src","flexGrow","Typography","variant","IconButton","size","Drawer","anchor","Boolean","onClose","Grid","container","direction","overflow","ChevronLeft","JSON","parse","getItem","user","split","Divider","map","page","MenuItem","p","marginLeft","index","MobileHeader","placeContent","end","hidden","to","activeClassName","label","marginRight","undefined","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Avatar","username","KeyboardArrowDown","renderAuthLinkButton"],"sourceRoot":""}